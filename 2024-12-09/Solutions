Problem 1
182. Duplicate Emails
Select P.Email
From Person as P
Group by P.Email
Having Count(P.Email) > 1;
Problem 2
183. Customers Who Never Order
Select C.Name As Customers
From Customers As C
Full Join Orders As O
On O.CustomerId = C.id
Where O.Id is null;
Problem 3
550. Game Play Analysis IV
                Solution gets runtime error after submission I realize that it only works if players have only been 2 times looking into other ways to compare the dates
                Select cast((cast(Count(*) as decimal(4,2))/cast((Select Count(Distinct(player_ID)) From activity) as decimal(4,2))) as decimal(4,2)) as fraction
                from (Select DATEDIFF(day, (Select top(1)event_date from Activity Where Player_id = A.Player_id Order by event_date),
                    (Select top(1)event_date From Activity  Where Player_id = A.Player_id Order by event_date desc)) as diff
                From Activity as A
                Group by A.player_id
                Having DATEDIFF(day, (Select top(1)event_date from Activity Where Player_id = A.Player_id Order by event_date),
                    (Select top(1)event_date From Activity Where Player_id = A.Player_id Order by event_date desc))  = 1) Diff;
Corrected after checking some solutions and reviewing syntax:
with first_login As (Select distinct(player_id), min(event_date) as firstdate
From Activity
Group by player_id),

consecutive_login As (Select a.player_id, event_date as nextvisit
From Activity A Join first_login on first_login.player_id = A.player_id 
and event_date = DateAdd(day,1,first_login.firstdate))

Select Cast((Cast((Count(c.nextvisit)) as decimal(5,2))/Count(f.firstdate)) as decimal(3,2)) as fraction
From first_login f
Full Join consecutive_login c
on f.player_id = c.player_id;
Problem 4.
585. Investments in 2016
With city as (Select I.Pid as Pid, I.tiv_2015 as tiv_2015, I.tiv_2016 as tiv_2016, Concat(I.lat, I.lon) as cityloc  From Insurance As I), distinctcity as (Select C.cityloc as loc, Count(C.cityloc) as numincity From city as C Group by C.cityloc),
repetevalue as (Select I.tiv_2015 as rvalue, Count(I.tiv_2015) as numofrepete From Insurance As I Group by I.tiv_2015)
Select Round((Sum(tiv_2016)),2) as tiv_2016 From city as C join repetevalue as RV on RV.rvalue = C.tiv_2015 join distinctcity as DC on DC.loc = C.cityloc Where RV.numofrepete > 1 and DC.numincity = 1;

Problem 5

  Trying to account for all test cases will require a different approach possibly using case statemets
With DSalary as (Select Distinct(Salary), departmentId From Employee),
ITSalary as (Select Top(3)Salary as Fsalary From DSalary  Where departmentID = 1 Order by Salary desc),
SalesSalary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 2 Order by Salary desc),
ID3Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 3 Order by Salary desc),
ID4Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 4 Order by Salary desc),
ID5Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 5 Order by Salary desc),
ID6Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 6 Order by Salary desc),
ID7Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 7 Order by Salary desc),
ID8Salary as (Select Top(3)Salary as Fsalary From DSalary Where departmentID = 8 Order by Salary desc),
TopSalary as (Select Fsalary From ITSalary union Select Fsalary From SalesSalary union Select Fsalary From ID3Salary union Select Fsalary From ID4Salary union Select Fsalary From ID5Salary union Select Fsalary From ID6Salary union Select Fsalary From ID7Salary union Select Fsalary From ID8Salary)
Select D.Name as Department
, E.Name as Employee
, E.Salary
 From Employee As E
Join Department As D on E.departmentId = D.id
Join TopSalary As TS on TS.Fsalary = E.Salary
